#!/usr/bin/env bash

#------------------------------------------------------------------
# Autor: NidoBr
# Mais: < https://github.com/NIDObr >
# Email: coqecoisa@gmail.com
# Versão: 0.2-beta 06/01/2022
# Sobre: Alternativa ao pidof escrito em shell
# License: BSD-3-Clause License
#------------------------------------------------------------------

# Modo pid unico
single="false"
# Modo exibir nomes
e_names="false"

# Testa todos os argumentos passados
while [ -n "${1}" ];do
	for cmdline in $(grep -il "${1}" /proc/[0-9]*/cmdline &>/dev/fd/1);do
#	for cmdline in /proc/[0-9]*/cmdline;do
		file_in="$(cat -A "${cmdline}" 2>/dev/null | tr '^@' ' ')"
		case "${file_in^^}" in
			# Não exibe o script atual " $0 "
			*${0^^}*)continue;;
			*${1^^}*)
				# Prepara a lista com os PIDs
				l_pids="${cmdline//[$'\/proc\/cmdline']} ${l_pids}"
				[ "${single}" == "true" ] && break
			;;
		esac
	done
	[ "${e_names}" == "true" ] && p_name="${1} "
	[ -z "${l_pids}" ] && {
		exit_code=1
	} || {
		printf '%s\n' "${p_name}${l_pids}"
	}
	shift && l_pids=""
done
# Retorna verdadeiro apenas se todos os programas especificados estiverem sendo executados.
exit "${exit_code:-0}"
